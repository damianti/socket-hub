version: '3.8'

services:
    postgres:
      image: postgres:15-alpine
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      volumes:
        - postgres_data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 30s
        timeout: 10s
        retries: 5
      networks:
        - socket-hub-network

    auth-service:
      build:
        context: ./services/auth-service
        dockerfile: Dockerfile
      environment:
        - DATABASE_URL=${DATABASE_URL}
      depends_on:
        postgres:
          condition: service_healthy
      networks:
        - socket-hub-network

    api-gateway:
      build:
        context: ./services/api-gateway
        dockerfile: Dockerfile
      ports:
        - "8000:8000"
      environment:
        - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      depends_on:
        - auth-service
      networks:
        - socket-hub-network

    frontend:
      build:
        context: ./frontend/web-app
        dockerfile: Dockerfile
      ports:
        - "3000:3000"
      environment:
        - REACT_APP_API_URL=http://localhost:8000
      depends_on:
        - api-gateway
      networks:
        - socket-hub-network


networks:
  socket-hub-network:
    driver: bridge

volumes: 
  postgres_data: